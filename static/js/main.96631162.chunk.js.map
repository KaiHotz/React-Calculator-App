{"version":3,"sources":["components/AutoScalingText/index.js","utils/helper.js","components/CalculatorDisplay/index.js","components/CalculatorKey/index.js","components/Calculator/index.js","App.js","registerServiceWorker.js","index.js"],"names":["AutoScalingText","scale","this","state","node","actualScale","parentNode","offsetWidth","setState","_this2","react_default","a","createElement","className","style","transform","concat","ref","props","children","Component","DigitKeys","CalculatorOperations","/","name","symbol","func","prevValue","nextValue","*","-","+","=","calculatorDisplay","_ref","value","Object","objectWithoutProperties","assign","components_AutoScalingText","language","navigator","formattedValue","parseFloat","toLocaleString","useGrouping","maximumFractionDigits","match","test","length","String","toExponential","getFormattedValue","defaultProps","calculatorKey","onClick","react_point","onPoint","defaultPtops","Calculator","displayValue","operator","waitingForOperand","_this","substring","newValue","fixedDigits","replace","toFixed","nextOperator","_this$state","inputValue","currentValue","digit","_this$state2","_this$state3","key","event","preventDefault","inputDigit","parseInt","performOperation","inputDot","inputPercent","clearLastChar","clearDisplay","clearAll","document","addEventListener","handleKeyDown","removeEventListener","clearText","CalculatorDisplay","CalculatorKey","toggleSign","map","_","App","components_Calculator","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.96631162.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './styles.css'\n\nclass AutoScalingText extends Component {\n  state = {\n    scale: 1\n  }\n\n  static propTypes = {\n    children: PropTypes.string\n  }\n\n  static defaultProps = {\n    children: '0'\n  }\n\n  componentDidUpdate () {\n    const { scale } = this.state\n\n    const node = this.node\n    const parentNode = node.parentNode\n\n    const availableWidth = parentNode.offsetWidth\n    const actualWidth = node.offsetWidth\n    const actualScale = availableWidth / actualWidth\n\n    if (scale === actualScale) { return }\n\n    if (actualScale < 1) {\n      this.setState({ scale: actualScale })\n    } else if (scale < 1) {\n      this.setState({ scale: 1 })\n    }\n  }\n\n  render () {\n    const { scale } = this.state\n\n    return (\n      <div\n        className=\"auto-scaling-text\"\n        style={{ transform: `scale(${scale},${scale})` }}\n        ref={node => { this.node = node }}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default AutoScalingText\n","export const DigitKeys = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0]\n\nexport const CalculatorOperations = {\n  '/': {\n    name: 'divide',\n    symbol: '÷',\n    func: (prevValue, nextValue) => prevValue / nextValue\n  },\n  '*': {\n    name: 'multiply',\n    symbol: '×',\n    func: (prevValue, nextValue) => prevValue * nextValue\n  },\n  '-': {\n    name: 'subtract',\n    symbol: '−',\n    func: (prevValue, nextValue) => prevValue - nextValue\n  },\n  '+': {\n    name: 'add',\n    symbol: '+',\n    func: (prevValue, nextValue) => prevValue + nextValue\n  },\n  '=': {\n    name: 'equals',\n    symbol: '=',\n    func: (prevValue, nextValue) => nextValue\n  }\n}\n\nexport const getFormattedValue = value => {\n  const language = navigator.language || 'en-US'\n\n  let formattedValue = parseFloat(value).toLocaleString(language, {\n    useGrouping: true,\n    maximumFractionDigits: 6\n  })\n\n  const match = value.match(/\\.\\d*?(0*)$/)\n\n  if (match) { formattedValue += (/[1-9]/).test(match[0]) ? match[1] : match[0] }\n\n  return formattedValue.length >= 14 ? String(parseFloat(value).toExponential()) : formattedValue\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport AutoScalingText from '../AutoScalingText'\nimport { getFormattedValue } from '../../utils/helper'\nimport './styles.css'\n\nconst calculatorDisplay = ({ value, ...props }) => (\n  <div {...props} className=\"calculator-display\">\n    <AutoScalingText>{getFormattedValue(value)}</AutoScalingText>\n  </div>\n)\n\ncalculatorDisplay.propTypes = {\n  value: PropTypes.string\n}\n\ncalculatorDisplay.defaultProps = {\n  value: '0'\n}\n\nexport default calculatorDisplay\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PointTarget from 'react-point'\nimport './styles.css'\n\nconst calculatorKey = ({ onClick, className, ...props }) => (\n  <PointTarget onPoint={onClick}>\n    <button className={`calculator-key ${className}`} {...props} />\n  </PointTarget>\n)\n\ncalculatorKey.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string\n}\n\ncalculatorKey.defaultPtops = {\n  className: null\n}\n\nexport default calculatorKey\n","import React, { Component } from 'react'\nimport _ from 'lodash'\nimport CalculatorDisplay from '../CalculatorDisplay'\nimport CalculatorKey from '../CalculatorKey'\nimport { CalculatorOperations, DigitKeys } from '../../utils/helper'\n\nimport './styles.css'\n\nclass Calculator extends Component {\n  state = {\n    value: null,\n    displayValue: '0',\n    operator: null,\n    waitingForOperand: false\n  }\n\n  clearAll = () => {\n    this.setState({\n      value: null,\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false\n    })\n  }\n\n  clearDisplay = () => {\n    this.setState({\n      displayValue: '0'\n    })\n  }\n\n  clearLastChar = () => {\n    const { displayValue } = this.state\n\n    this.setState({\n      displayValue: displayValue.substring(0, displayValue.length - 1) || '0'\n    })\n  }\n\n  toggleSign = () => {\n    const { displayValue } = this.state\n    const newValue = parseFloat(displayValue) * -1\n\n    this.setState({\n      displayValue: String(newValue)\n    })\n  }\n\n  inputPercent = () => {\n    const { displayValue } = this.state\n    const currentValue = parseFloat(displayValue)\n\n    if (currentValue === 0) { return }\n\n    const fixedDigits = displayValue.replace(/^-?\\d*\\.?/, '')\n    const newValue = parseFloat(displayValue) / 100\n\n    this.setState({\n      displayValue: String(newValue.toFixed(fixedDigits.length + 2))\n    })\n  }\n\n  performOperation = nextOperator => () => {\n    const { value, displayValue, operator } = this.state\n    const inputValue = parseFloat(displayValue)\n\n    if (value == null) {\n      this.setState({\n        value: inputValue\n      })\n    } else if (operator) {\n      const currentValue = value || 0\n      const newValue = CalculatorOperations[operator].func(currentValue, inputValue)\n\n      this.setState({\n        value: newValue,\n        displayValue: String(newValue)\n      })\n    }\n\n    this.setState({\n      waitingForOperand: true,\n      operator: nextOperator\n    })\n  }\n\n  inputDigit = digit => () => {\n    const { displayValue, waitingForOperand } = this.state\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: String(digit),\n        waitingForOperand: false\n      })\n    } else {\n      this.setState({\n        displayValue: displayValue === '0' ? String(digit) : displayValue + digit\n      })\n    }\n  }\n\n  inputDot = () => {\n    const { displayValue, waitingForOperand } = this.state\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: '0.',\n        waitingForOperand: false\n      })\n    } else if (!(/\\./).test(displayValue)) {\n      this.setState({\n        displayValue: displayValue + '.',\n        waitingForOperand: false\n      })\n    }\n  }\n\n  handleKeyDown = ({ key }) => {\n    if (key === 'Enter') { key = '=' }\n\n    if ((/\\d/).test(key)) {\n      event.preventDefault()\n      this.inputDigit(parseInt(key, 10))()\n    } else if (key in CalculatorOperations) {\n      event.preventDefault()\n      this.performOperation(key)()\n    } else if (key === '.') {\n      event.preventDefault()\n      this.inputDot()\n    } else if (key === '%') {\n      event.preventDefault()\n      this.inputPercent()\n    } else if (key === 'Backspace') {\n      event.preventDefault()\n      this.clearLastChar()\n    } else if (key === 'Clear') {\n      event.preventDefault()\n\n      if (this.state.displayValue !== '0') {\n        this.clearDisplay()\n      } else {\n        this.clearAll()\n      }\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  render () {\n    const { displayValue } = this.state\n\n    const clearDisplay = displayValue !== '0'\n    const clearText = clearDisplay ? 'C' : 'AC'\n\n    return (\n      <div className=\"calculator\">\n        <CalculatorDisplay value={displayValue} />\n        <div className=\"calculator-keypad\">\n          <div className=\"input-keys\">\n            <div className=\"function-keys\">\n              <CalculatorKey\n                className=\"key-clear\"\n                onClick={clearDisplay ? this.clearDisplay : this.clearAll}\n              >\n                { clearText }\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-sign\"\n                onClick={this.toggleSign}\n              >\n                ±\n              </CalculatorKey>\n              <CalculatorKey\n                className=\"key-percent\"\n                onClick={this.inputPercent}\n              >\n                %\n              </CalculatorKey>\n            </div>\n            <div className=\"digit-keys\">\n              {\n                DigitKeys.map(digit =>\n                  <CalculatorKey\n                    key={`key-${digit}`}\n                    className={`key-${digit}`}\n                    onClick={this.inputDigit(digit)}\n                  >\n                    { digit }\n                  </CalculatorKey>\n                )\n              }\n              <CalculatorKey\n                className=\"key-dot\"\n                onClick={this.inputDot}\n              >\n                ●\n              </CalculatorKey>\n            </div>\n          </div>\n          <div className=\"operator-keys\">\n            {\n              _.map(CalculatorOperations, (value, key) =>\n                <CalculatorKey\n                  key={`key-${value.name}`}\n                  className={`key-${value.name}`}\n                  onClick={this.performOperation(key)}\n                >\n                  { value.symbol }\n                </CalculatorKey>\n              )\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Calculator\n","import React, { Component } from 'react'\nimport Calculator from './components/Calculator'\nimport './App.css'\n\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"app\">\n        <Calculator />\n      </div>\n    )\n  }\n}\n\nexport default App\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport './global-styles.css'\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}